name: GitHub Release

on:
  push:
    branches:
      - chore/CI-CD
    tags:
      - 'v*.*.*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get package version
        id: package-version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Build Angular project
        run: npm run build -- --configuration production

      - name: Zip release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd dist
          zip -r your-app-v${{ steps.package-version.outputs.VERSION }}.zip your-angular-app-name

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.VERSION }}
          release_name: Release v${{ steps.package-version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            Release v${{ steps.package-version.outputs.VERSION }}
            - Built from Angular project
            - Auto-generated by GitHub Actions

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist/tuition-to-all-client-v${{ steps.package-version.outputs.VERSION }}.zip
          asset_name: tuition-to-all-client-v${{ steps.package-version.outputs.VERSION }}.zip
          asset_content_type: application/zip